/*========================================================
  2.  GRID 
========================================================== */


/** == SCAFFOLDING == */
/** ================================================== */

	
	/** Content Area */
	#top-bar .boxed,
	#site-header .boxed,
	#site-body,
	#site-footer .boxed,
	#search-filter .boxed,
	#responsive-menu .boxed,
	#site-notification
	{
		margin: 0 auto;
		width: 88%; // fallback width of container

		@include breakpoint($mobile) { width: 90%; }
		@include breakpoint($tablet) { width: 88%; }
		@include breakpoint($small-screen) { width: 88%; }
		@include breakpoint($laptop)  { width: 1170px; }
		@include breakpoint($full-hd) { width: 1440px; }
		@include breakpoint($quad-hd) { width: 1440px; }
	}



/** == PORTFOLIO == */
/** ================================================== */

	// FOR MODERN BROWSERS
	html.cssgrid {

		// prepare "Grid Container" having different columns
		@for $i from 1 through 10 {

			.grid[data-col="#{$i}"], .team-grid[data-col="#{$i}"] {
				display: grid; // declare the container as "Grid"
				grid-template-columns: repeat( $i, 1fr ); // define grid "Columns"
				grid-template-rows: auto; // define grid "Rows"
				grid-gap: 30px; // define grid "Gutter"

				@include breakpoint($mobile) { grid-template-columns: repeat( 1, 1fr ); }
				@include breakpoint($tablet) { grid-template-columns: repeat( 2, 1fr ); }
			}

		}

		// prepare "Grid Item" having different row/column span
		@for $i from 2 through 10 {

			.grid, .team-grid {
				.grid-item {
					&.height-#{$i}x {
						grid-row: span $i; // define "Row Span" for specific "Grid Item"
						@include breakpoint($mobile) { grid-row: span 1; }
					}
					&.width-#{$i}x {
						grid-column: span $i; // define "Column Span" for specific "Grid Item"
						@include breakpoint($mobile) { grid-column: span 1; }
					}
				}
			}

		}		

	}



/** == COLUMNS == */
/** ================================================== */


	/** Row */
	.row {
		display: flex;
		align-items: center;
		justify-content: space-between;
		flex-wrap: wrap;

		/** Alignmnet */
		&.align-left {
			justify-content: flex-start;
		}
		&.align-right {
			justify-content: flex-end;
		}
		&.align-center {
			justify-content: center;
		}

		/** General */
		.column {
			margin-bottom: 30px;
			@include breakpoint($mobile)  { width: 100% !important; }
		}

		/** Mutiple Columns */
		.column[data-span="6"] {
			width: 48%;
		}
		.column[data-span="5"] {
			width: span(5 of 6 0.35);
		}
		.column[data-span="4"] {
			width: span(4 of 6 0.35);
		}
		.column[data-span="3"] {
			width: span(3 of 6 0.35);
		}
		.column[data-span="2"] {
			width: 33%;
		}
		.column[data-span="1"] {
			width: span(1 of 6 0.35);
		}

	}


/** == WP-GALLERY == */
/** ================================================== */

	// prepare "Grid Container" having different columns
	@for $i from 1 through 10 {

		.wp-gallery[data-col="#{$i}"] {
			display: grid; // declare the container as "Grid"
			grid-template-columns: repeat( $i, 1fr ); // define grid "Columns"
			grid-template-rows: auto; // define grid "Rows"
			grid-gap: 30px; // define grid "Gutter"

			width: 112%;
			margin: 45px 0 45px -6%;

			@include breakpoint($mobile) { grid-template-columns: repeat( 1, 1fr ); width: auto; margin-left: auto; }
			@include breakpoint($tablet) { grid-template-columns: repeat( 2, 1fr ); }
		}

	}

	// Set Grid Gap for different columns
	.wp-gallery[data-col="1"] { grid-gap: 45px; }
	.wp-gallery[data-col="2"] { grid-gap: 45px; }
	.wp-gallery[data-col="3"] { grid-gap: 30px; }
	.wp-gallery[data-col="4"] { grid-gap: 25px; }
	.wp-gallery[data-col="5"] { grid-gap: 25px; }
	.wp-gallery[data-col="6"] { grid-gap: 20px; }
	.wp-gallery[data-col="7"] { grid-gap: 17px; }
	.wp-gallery[data-col="8"] { grid-gap: 13px; }
	.wp-gallery[data-col="9"] { grid-gap: 10px; }